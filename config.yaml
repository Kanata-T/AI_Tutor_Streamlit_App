# config.yaml
# LLM Model Settings
llm_models:
  text_model_name: "gemini-2.5-flash-preview-04-17"
  vision_model_name: "gemini-2.5-flash-preview-04-17"
  # temperature: 0.7 # 例: 生成時の温度設定
  # top_p: 1.0       # 例: Top-pサンプリング

# Prompt File Names (promptsディレクトリ内のファイル名、拡張子なし)
prompt_templates:
  system_prompt: "system_prompt"
  extract_text_from_image: "extract_text_from_image" # OCR用に追加
  analyze_query_with_ocr: "analyze_query_with_ocr"   # 新しい初期分析用 (旧 initial_analysis)
  clarification_question: "clarification_question"
  analyze_clarification_response: "analyze_clarification_response"
  generate_explanation: "generate_explanation"
  generate_followup: "generate_followup"
  generate_summary: "generate_summary"
  analyze_student_performance: "analyze_student_performance"
  # 必要に応じて他のプロンプトも追加

# Directory Paths (プロジェクトルートからの相対パス)
# PROMPTS_DIR は pathlib で動的に計算するので、ここでは不要かもしれないが、
# 他の固定パスが必要な場合に備えてセクションだけ用意
# directories:
#   prompts: "prompts"

# Other Magic Numbers or Settings
# example_setting: 123

# --- Image Processing Settings (新規追加) ---
image_processing:
  # PillowのDecompressionBomb保護のための最大許容ピクセル数 (コメントアウトまたは非常に大きな値を設定)
  # NoneにするとPillowの内部デフォルト(約89MP)に依存する。
  # アプリケーションとして明確な上限を設けたい場合に設定。
  # 例: 15000 * 15000 = 225,000,000 (約2.25億ピクセル)
  pillow_max_image_pixels: 225000000

  # preprocess_uploaded_image 関数のデフォルト値
  default_max_pixels_for_resizing: 4000000  # リサイズ時の最大総ピクセル数 (例: 2000x2000)
  default_output_format: "JPEG"            # デフォルトの出力画像フォーマット
  default_jpeg_quality: 85                 # JPEG出力時の品質
  apply_grayscale: true
  # apply_trimming: false # Pillowベースのトリミングは一旦コメントアウトまたは削除も検討

  opencv_trimming:
    apply: true
    padding: 0  # ★固定値★
    adaptive_thresh_block_size: 11 # ★固定値★
    adaptive_thresh_c: 7         # ★固定値★
    min_contour_area_ratio: 0.00005 # ★固定値★
    gaussian_blur_kernel_width: 5  # ★変更★
    gaussian_blur_kernel_height: 5 # ★変更★
    morph_open_apply: false      # ★固定値★
    morph_open_kernel_size: 3
    morph_open_iterations: 1
    morph_close_apply: false     # ★固定値★
    morph_close_kernel_size: 3
    morph_close_iterations: 1
    haar_apply: false # 元のapp.pyの固定値ではTrueだったため、合わせるか検討
    haar_rect_h: 22 # 元のapp.pyの固定値
    haar_peak_threshold: 7.0 # 元のapp.pyの固定値
    h_proj_apply: false # 元のapp.pyの固定値ではTrueだったため、合わせるか検討
    h_proj_threshold_ratio: 0.15 # 元のapp.pyの固定値

    # --- ▼ OCRベーストリミング関連のパラメータ (新規追加) ▼ ---
    ocr_trim_apply_as_fallback: true # 輪郭ベース失敗時にOCRトリミングを試みるか (true/false)
    ocr_trim_padding: 0             # ★ パディングを0に
    # ocr_trim_lang: "eng+jpn"     # 変更なし
    # ocr_trim_min_conf: 25        # 変更なし
    
    # --- ▼ OCRトリミングのフィルタリング用パラメータ (新規追加) ▼ ---
    ocr_trim_min_box_height: 5
    ocr_trim_max_box_height_ratio: 0.3 # 画像高さの30%より大きい高さのボックスは除外
    ocr_trim_min_box_width: 5
    ocr_trim_max_box_width_ratio: 0.8  # 画像幅の80%より大きい幅のボックスは除外
    ocr_trim_min_aspect_ratio: 0.05    # 幅/高さ がこれより小さいものは除外 (細長すぎるもの)
    ocr_trim_max_aspect_ratio: 20.0    # 幅/高さ がこれより大きいものは除外 (横長すぎるもの)
    ocr_tesseract_config: "--psm 6"    # Tesseractのconfigオプション (例: --psm 3, --psm 4, --psm 6 など)
    # --- ▲ ここまで新規追加 ▲ ---

  # サポートするMIMEタイプと変換ルール
  supported_mime_types:
    - "image/png"
    - "image/jpeg"
    - "image/webp"
    # HEIC/HEIFは pillow-heif がインストールされていれば有効化も検討
    # - "image/heic"
    # - "image/heif"
  convertable_mime_types: # キー: 変換元MIME, 値: 変換先MIME (Geminiサポート形式に合わせる)
    "image/gif": "image/png"
    "image/bmp": "image/png"
    # 必要に応じて他の変換ルールを追加
    # 例: "image/tiff": "image/png"