# LLM Model Settings
llm_models:
  text_model_name: "gemini-2.5-flash-preview-05-20" # 例: テキスト生成モデル名
  vision_model_name: "gemini-2.5-flash-preview-05-20" # 例: 画像認識対応モデル名
  # temperature: 0.7 # 生成時の多様性を制御する温度パラメータ
  # top_p: 1.0       # Top-pサンプリングパラメータ

# Prompt File Names (promptsディレクトリ内のファイル名、拡張子なし)
prompt_templates:
  system_prompt: "system_prompt"
  extract_text_and_type_from_image: "extract_text_and_type_from_image"   # 画像からのテキスト抽出用
  analyze_query_with_ocr: "analyze_query_with_ocr"     # OCRテキストを用いた初期分析用
  clarification_question: "clarification_question"     # 生徒への明確化質問生成用
  #analyze_clarification_response: "analyze_clarification_response" # 明確化回答分析用
  plan_guidance: "plan_guidance" # 指導計画立案用
  generate_explanation: "generate_explanation"         # 解説生成用
  generate_followup: "generate_followup"               # フォローアップ質問生成用
  generate_summary: "generate_summary"                 # 対話要約生成用
  analyze_student_performance: "analyze_student_performance" # 生徒の理解度分析用

# --- Image Processing Settings ---
image_processing:
  # Pillowが処理する画像の最大許容ピクセル数。
  # DecompressionBomb攻撃を防ぐ目的。NoneにするとPillowの内部デフォルト値に依存。
  # 例: 15000px * 15000px = 225,000,000 ピクセル
  pillow_max_image_pixels: 225000000

  # preprocess_uploaded_image 関数のデフォルトパラメータ群
  default_max_pixels_for_resizing: 4000000  # リサイズ処理時の最大総ピクセル数 (例: 2000x2000程度)
  default_output_format: "JPEG"             # 最終的な出力画像のデフォルトフォーマット (JPEGまたはPNG)
  default_jpeg_quality: 85                  # JPEG出力時の品質 (1-100)
  apply_grayscale: true                     # 表示用・Vision API用画像にグレースケールを適用するか

  # AIチューターモードで使用するデフォルトのトリミング戦略
  # "ocr_then_contour": OCRベースを試行し、失敗/無効なら輪郭ベースを試行。
  # "contour_then_ocr": 輪郭ベースを試行し、失敗/無効ならOCRベースを試行。
  # "ocr_only": OCRベースのみ試行。
  # "contour_only": 輪郭ベースのみ試行。
  # "none": トリミングを行わない。
  default_trimming_strategy: "ocr_then_contour"

  # OpenCVを用いた輪郭ベーストリミングの設定
  opencv_trimming:
    apply: true                             # 輪郭ベーストリミングを適用するか
    padding: 0                              # 切り出し領域の周囲に追加するパディング (ピクセル単位)
    adaptive_thresh_block_size: 11          # 適応的閾値処理のブロックサイズ (奇数)
    adaptive_thresh_c: 7                    # 適応的閾値処理のC値 (閾値から引かれる定数)
    min_contour_area_ratio: 0.00005         # 画像総面積に対する、有効とみなす最小輪郭面積の割合
    gaussian_blur_kernel_width: 5           # ガウシアンブラーのカーネル幅 (0で無効、奇数推奨)
    gaussian_blur_kernel_height: 5          # ガウシアンブラーのカーネル高さ (0で無効、奇数推奨)
    morph_open_apply: false                 # モルフォロジー・オープニング処理を適用するか
    morph_open_kernel_size: 3               # オープニング処理のカーネルサイズ (奇数)
    morph_open_iterations: 1                # オープニング処理の繰り返し回数
    morph_close_apply: false                # モルフォロジー・クロージング処理を適用するか
    morph_close_kernel_size: 3              # クロージング処理のカーネルサイズ (奇数)
    morph_close_iterations: 1               # クロージング処理の繰り返し回数
    ocr_trim_tuning_apply: true             # チューニングモードでOCRベーストリミングをデフォルトで有効にするかどうかのフラグ
    ocr_trim_padding: 0                     # OCRベーストリミング時のパディング
    ocr_trim_lang: "eng+jpn"              # OCR言語 (image_processor.py内でデフォルト引数として定義)
    ocr_trim_min_conf: 25                 # OCR最小信頼度 (image_processor.py内でデフォルト引数として定義)
    
    # OCRベーストリミングのバウンディングボックスフィルタリング用パラメータ
    ocr_trim_min_box_height: 5              # 有効なテキストボックスの最小高さ (ピクセル)
    ocr_trim_max_box_height_ratio: 0.3      # 画像高さに対する有効なテキストボックスの最大高さの割合
    ocr_trim_min_box_width: 5               # 有効なテキストボックスの最小幅 (ピクセル)
    ocr_trim_max_box_width_ratio: 0.8       # 画像幅に対する有効なテキストボックスの最大幅の割合
    ocr_trim_min_aspect_ratio: 0.05         # 有効なテキストボックスの最小アスペクト比 (幅/高さ)
    ocr_trim_max_aspect_ratio: 20.0         # 有効なテキストボックスの最大アスペクト比 (幅/高さ)
    ocr_tesseract_config: "--psm 6"         # Tesseract OCRの追加設定オプション (例: ページセグメンテーションモード)

  # アプリケーションがサポートする入力画像のMIMEタイプ
  supported_mime_types:
    - "image/png"
    - "image/jpeg"
    - "image/webp"
    # HEIC/HEIF形式のサポートは pillow-heif のインストールが必要
    # - "image/heic"
    # - "image/heif"

  # Gemini APIが直接サポートしていないMIMEタイプから、サポート形式への変換ルール
  # キー: 変換元MIMEタイプ, 値: 変換先MIMEタイプ (主に "image/png" または "image/jpeg")
  convertable_mime_types:
    "image/gif": "image/png"
    "image/bmp": "image/png"
    # 必要に応じて他の変換ルールを追加 (例: "image/tiff": "image/png")
# --- Application Logic Settings ---
application_logic:
  max_clarification_attempts: 1 # 明確化の最大試行回数